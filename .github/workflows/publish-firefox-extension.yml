name: Publish Firefox Extension
on:
  push:
    branches:
      - release
      - beta
      - alpha
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (no actual publishing)'
        type: boolean
        default: true
      release_type:
        description: 'Release type'
        type: choice
        options:
          - production
          - beta
          - alpha
          - unlisted
        default: 'production'
        required: true
jobs:
  publish-firefox:
    uses: ./.github/workflows/common.yml
    with:
      build_command: npm run build:firefox
      dist_folder: ./dist/firefox
      zip_name: firefox-extension
      release_type: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.release_type || (github.ref_name == 'release' && 'production' || github.ref_name) }}
    secrets:
      FIREFOX_LASTFM_API_KEY: ${{ secrets.FIREFOX_LASTFM_API_KEY }}
      FIREFOX_LASTFM_API_SECRET: ${{ secrets.FIREFOX_LASTFM_API_SECRET }}
  publish:
    runs-on: ubuntu-latest
    needs: publish-firefox
    steps:
    - name: Download extension package
      uses: actions/download-artifact@v4
      with:
        name: firefox-extension-${{ needs.publish-firefox.outputs.version }}
        path: ./
    - name: Verify ZIP file
      run: |
        echo "Extension version: ${{ needs.publish-firefox.outputs.version }}"
        echo "ZIP file: ${{ needs.publish-firefox.outputs.zip_path }}"
        echo "Release type: ${{ needs.publish-firefox.outputs.release_type }}"
        ls -la
        echo "ZIP contents:"
        unzip -l ${{ needs.publish-firefox.outputs.zip_path }}

    # Extract the built extension from the ZIP file
    - name: Extract extension from ZIP
      if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.dry_run != 'true' }}
      run: |
        mkdir -p ./dist/firefox
        unzip ${{ needs.publish-firefox.outputs.zip_path }} -d ./dist/firefox

    # Checkout only for updating manifest version - no rebuild needed
    - name: Checkout code (for manifest updates only)
      if: ${{ (github.event_name != 'workflow_dispatch' || github.event.inputs.dry_run != 'true') && (needs.publish-firefox.outputs.release_type == 'alpha' || needs.publish-firefox.outputs.release_type == 'beta') }}
      uses: actions/checkout@v4

    # Update manifest version for alpha/beta if needed
    - name: Update manifest version
      if: ${{ (github.event_name != 'workflow_dispatch' || github.event.inputs.dry_run != 'true') && (needs.publish-firefox.outputs.release_type == 'alpha' || needs.publish-firefox.outputs.release_type == 'beta') }}
      run: |
        # Get version from package.json
        npm install -g json
        VERSION=$(json version < ./package.json)
        SUFFIX="${{ needs.publish-firefox.outputs.release_type }}"
        UPDATED_VERSION="${VERSION}-${SUFFIX}"

        # Update manifest.json with the new version
        jq ".version = \"$UPDATED_VERSION\"" ./dist/firefox/manifest.json > temp.json && mv temp.json ./dist/firefox/manifest.json
        echo "Updated version to $UPDATED_VERSION in manifest.json"
        cat ./dist/firefox/manifest.json | grep version

    # Only run this step if NOT in dry-run mode
    - name: Sign and Publish to Firefox Add-ons Store
      if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.dry_run != 'true' }}
      env:
        AMO_API_KEY: ${{ secrets.AMO_API_KEY }}
        AMO_API_SECRET: ${{ secrets.AMO_API_SECRET }}
      run: |
        npm install -g web-ext

        # Determine the channel based on release type
        CHANNEL="listed"
        if [[ "${{ needs.publish-firefox.outputs.release_type }}" == "unlisted" ]]; then
          CHANNEL="unlisted"
        fi

        echo "Publishing with channel: $CHANNEL"

        npx web-ext sign --source-dir ./dist/firefox \
                         --api-key $AMO_API_KEY \
                         --api-secret $AMO_API_SECRET \
                         --channel $CHANNEL

    # Print message in dry-run mode
    - name: Dry Run Message
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'true' }}
      run: |
        echo "üîç DRY RUN COMPLETED"
        echo "‚úÖ Build successful"
        echo "‚úÖ ZIP created: ${{ needs.publish-firefox.outputs.zip_path }}"
        echo "‚úÖ Version: ${{ needs.publish-firefox.outputs.version }}"
        echo "‚úÖ Release type: ${{ needs.publish-firefox.outputs.release_type }}"
        echo "‚è≠Ô∏è Publishing step was skipped"
        echo ""
        if [[ "${{ needs.publish-firefox.outputs.release_type }}" == "production" ]]; then
          echo "If this were a real publish, the extension would be signed and uploaded to the Firefox Add-ons Store as a production release"
        elif [[ "${{ needs.publish-firefox.outputs.release_type }}" == "beta" ]]; then
          echo "If this were a real publish, the extension would be signed and uploaded to the Firefox Add-ons Store as a beta release"
        elif [[ "${{ needs.publish-firefox.outputs.release_type }}" == "alpha" ]]; then
          echo "If this were a real publish, the extension would be signed and uploaded to the Firefox Add-ons Store as an alpha release"
        elif [[ "${{ needs.publish-firefox.outputs.release_type }}" == "unlisted" ]]; then
          echo "If this were a real publish, the extension would be signed and uploaded to the Firefox Add-ons Store as an unlisted release"
        fi
