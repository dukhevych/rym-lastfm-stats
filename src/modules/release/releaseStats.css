:root {
  --clr-lastfm: #f71414;
}

.release-stats-content {}

.list-stats {
  list-style: none;
  display: flex;
  align-items: center;

  & > li {
    display: flex;
    align-items: center;
    cursor: default;

    &.is-hidden {
      display: none;
    }

    &.is-user-playcount {
      font-weight: bold;
    }

    &:after {
      content: '|';
      margin-inline: 0.8rem;
    }

    &[data-value]:before {
      content: attr(data-value);
      margin-right: 0.5rem;
      font-weight: bold;
    }
  }
}

.list-stats-wrapper {
  position: relative;
  display: flex;
  align-items: center;
  /* gap: 2rem; */

  &:before {
    content: 'Loading...';
    display: none;
  }

  &.is-updating {
    opacity: 0.5;
    pointer-events: none;
  }

  &.is-loading {
    & > * {
      display: none !important;
    }
    &:before {
      display: block;
    }
  }

  &.no-data {
    .list-stats,
    .lastfm-link {
      display: none;
    }

    &:before {
      content: 'No Last.fm data found';
      font-weight: bold;
    }
  }

  .incorrect-stats-link {
    margin-left: auto;
    font-size: 1.1em;
    font-weight: bold;
    color: var(--mono-c);

    position: relative;

    &:hover {
      color: var(--mono-6)
    }
  }

  .lastfm-link {
    transition: color .15s ease-in-out;
    display: inline-flex;
    gap: 0.5rem;

    &[href=""] { display: none; }

    svg {
      width: 20px;
      height: 20px;
      display: block;
    }

    &:after {
      content: 'Last.fm';
      font-weight: bold;
    }

    &.is-localized {
      color: var(--clr-lastfm);

      &:hover {
        color: color-mix(in srgb, var(--clr-lastfm), #fff 60%);
      }
    }

    &.is-original:after {
      content: 'Original name';
    }
  }
}

/* Base styling for the dialog box */
dialog.dialog-base {
  top: 50%;
  left: 50%;
  width: 90%;
  max-width: 500px;
  font-size: 14px;
  line-height: 20px;
  background: var(--mono-f);
  color: var(--text-primary);
  box-shadow: 0 0 2rem rgba(0, 0, 0, 0.4);
  z-index: 1000;
  opacity: 0;
  border: 5px solid rgba(255, 255, 255, 0.1);
  background-clip: padding-box;
  border-radius: 5px;
  transform: translate(-50%, -50%);
  transition-property: display opacity;
  transition-duration: 0.3s;
  transition-behavior: allow-discrete;

  --vertical-shift: 5vh;
  translate: 0 var(--vertical-shift);

  &[open] {
    opacity: 1;
    translate: 0 0;

    @starting-style {
      opacity: 0;
      translate: 0 calc(var(--vertical-shift) * -1);
    }
  }
}

/* Backdrop when dialog is shown modally */
dialog.dialog-base::backdrop {
  opacity: 0;
  transition-property: opacity, display, overlay;
  transition-duration: 2s;
  transition-behavior: allow-discrete;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(5px);
}

dialog.dialog-base[open]::backdrop {
  opacity: 1;
}

@starting-style {
  dialog.dialog-base[open]::backdrop {
    opacity: 0;
  }
}

/* Close button in top-right corner */
.dialog-close-btn {
  position: absolute;
  aspect-ratio: 1 / 1;
  height: 100%;
  top: 50%;
  right: 0;
  line-height: inherit;
  display: flex;
  align-items: center;
  justify-content: center;
  transform: translateY(-50%);
  background: transparent;
  border: none;
  color: #666;
  cursor: pointer;
  outline: none;

  svg {
    width: 80%;
    height: 80%;
    fill: currentColor;
  }

  &:hover {
    color: #f0f0f0;
  }
}

/* Title inside the dialog */
.dialog-title {
  font-size: 1.5rem;
  text-align: center;
  font-weight: bold;
  background-color: color-mix(in srgb, var(--text-primary), transparent 75%);
  padding-block: 1.25rem;
  margin: 0;
  position: relative;
}

.list-search {
  list-style: none;
  margin: 0;
  padding: 0;
}

.search-item {
  .search-item-link {
    display: flex;
    align-items: center;
    padding: 1rem;
    color: currentColor;
    gap: 1rem;
    text-decoration: none;
    transition: background-color 0.2s ease;

    &:hover {
      background-color: color-mix(in srgb, var(--text-primary), transparent 90%);
    }
  }

  &.is-selected .search-item-link {
    background-color: color-mix(in srgb, var(--text-primary), transparent 95%);
    cursor: default;
    pointer-events: none;
  }

  .search-item-title {
    text-wrap: balance;
  }

  .search-item-image {
    width: 30px;
    height: 30px;
    background-color: var(--mono-3);
  }
}

html {
  scrollbar-gutter: stable;
}

body:has(dialog[open]) {
  overflow: hidden;
}
